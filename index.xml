<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Porrith Suong</title>
    <link>/</link>
    <description>Recent content on Porrith Suong</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 18 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>/archive/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/archive/page/about/</guid>
      <description>I graduated from City College of New York with a Bachelors in Science in Computer Science. I am an avid game developer highly interested in
 Optimizations and high performance computing Computer Graphics Game AI  I&amp;rsquo;ve built a bunch of small workflow tools within Unity and are opened source on Github. Feel free to take a look at various tools I built here.
My Work I founded my own development studio, initialPrefabs, where I primarily do:</description>
    </item>
    
    <item>
      <title>InitialPrefabs</title>
      <link>/post/initialprefabs/</link>
      <pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/initialprefabs/</guid>
      <description>The consulting work I do at initialPrefabs</description>
    </item>
    
    <item>
      <title>README</title>
      <link>/readme/</link>
      <pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/readme/</guid>
      <description>I&amp;rsquo;m a game developer highly interested in
 low level tech graphics programming performance &amp;amp; optimizations C, C#, Rust  My Work InitialPrefabs I cofounded my own development studio, initialPrefabs, where I primarily do:
 Game Development consultation  Creating custom solutions to help other studios build their games / products / technical demos   Create custom tools to aid the game development process  For a list of games I have worked on via initialPrefabs, see the link here Thousand Ant At Thousand Ant, I am a contract software engineer and technical writer where I help clients create demos and write technical scripts for their products and services.</description>
    </item>
    
    <item>
      <title>Thousand Ant Work</title>
      <link>/post/thousand-ant/</link>
      <pubDate>Tue, 12 Oct 2021 19:57:02 -0400</pubDate>
      
      <guid>/post/thousand-ant/</guid>
      <description>Things I&amp;rsquo;ve worked on at Thousand Ant</description>
    </item>
    
    <item>
      <title>Games</title>
      <link>/archive/work/games/</link>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/archive/work/games/</guid>
      <description>Here are some of the games I&amp;rsquo;ve worked on over the past few years!
Table of Contents  Released  Kitty in the Box 2 Emissary the Sunsets the Self Bag of Beliefs Kart Microgame Kung Fu Kickball Cell To Singularity   Not Released  Inwards Gestalt: Steam &amp;amp; Cinder Kitty in the Box VR     Released Kitty in the Box 2 (Released, Mobile) Kitty in the Box 2 is a mobile game where you aid, Sushi our lovable cat, jump into boxes.</description>
    </item>
    
    <item>
      <title>Thousand Ant</title>
      <link>/archive/work/thousandant/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/archive/work/thousandant/</guid>
      <description>Table of Contents  Thousand Ant  Flocking With the C# Job System C# Job System: Using DOTs with Managed C# APIs   Unity Technologies  Kart Microgame Open Projects Devlg Bolt Adaptive Performance Physics Optimizations Shader Graph UI Toolkit Scriptable Objects ML Agents Device Simulator   Genvid Technologies  I work with Thousand Ant and create educational videos/technical scripts to explain new tech and features for their end users.</description>
    </item>
    
    <item>
      <title>Starting with Vulkan and Rust</title>
      <link>/archive/blog/vulcan-rust-part-1/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/archive/blog/vulcan-rust-part-1/</guid>
      <description>So I&amp;rsquo;ve always wanted to learn Rust and Vulkan together. I&amp;rsquo;ve done a bit of it before using C++ and Vulkan, but I&amp;rsquo;d like to start recreating that previous C++ Vulkan Renderer with Rust. So in these series of blog posts - I&amp;rsquo;ll write some public notes on Rust and how it is interfaced with the Vulkan ash crate.
The implementation of Vulkan will primarily be based on this tutorial. This blog post will cover the Instance section of the tutorial series.</description>
    </item>
    
    <item>
      <title>UGUIDots Progress Report</title>
      <link>/archive/blog/making-of-uguidots/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/archive/blog/making-of-uguidots/</guid>
      <description>UGUIDOTS is a data oriented workflow of Unity default runtime UI, UGUI. This provides a conversion workflow to convert the authored GameObject UI to a more DOTS friendly UI system, that works with their Universal Render Pipeline (formerly known as Lightweight Render Pipeline).
 While UIElements certainly scales better and a DOTS version is in the works, I wanted to solve my current issues and have a good understanding of the UI Pipeline.</description>
    </item>
    
    <item>
      <title>DANI AI</title>
      <link>/archive/work/dani-ai/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/archive/work/dani-ai/</guid>
      <description>Dani AI is a node based editor to help design and prototype AI in Unity. Each AI designed and built using Dani AI follows a neural network like schema and attempts to treat each agent as an organism with senses that update in realtime.
Senses provide natural information about the simulated world and hook into decisions, where the agent executes a series of authored actions from the user.
You can grab it here on the Asset Store.</description>
    </item>
    
    <item>
      <title>UGUIDots</title>
      <link>/archive/work/uguidots/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/archive/work/uguidots/</guid>
      <description>UGUIDots is an on going project to convert Unity&amp;rsquo;s default UI to a data oriented compliant system. The system is meant to augment on top of Unity&amp;rsquo;s UI.
Currently, the only features supported are:
 Simple image rendering Text rendering Render orders Static Analysis for batching Button States  Button closing   Image Effects interfaced with Universal Render Pipeline Shaders Scaling &amp;amp; Anchoring Text support through char pointers  Github Link</description>
    </item>
    
    <item>
      <title>Ten Months into the Making of Repurposed</title>
      <link>/archive/blog/ten-months-into-the-making/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/archive/blog/ten-months-into-the-making/</guid>
      <description>So just a bit of background information, Repurposed is a 2D action arena game with heavy card game elements. I think videos do more justice at the moment instead of me pitching, so here&amp;rsquo;s the actual gameplay video link:
Around ten months ago, October of 2018, I prototyped a game idea on Google Slides on how I wanted people to play the game, and entered it into Unity&amp;rsquo;s 2D challenge. But, considering we only had 3 months and the game was very quite large for the scope of the challenge, I turned the game into a much larger vision.</description>
    </item>
    
    <item>
      <title>Scaffolding in Development</title>
      <link>/archive/blog/low-level-apis/</link>
      <pubDate>Sat, 13 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/archive/blog/low-level-apis/</guid>
      <description>So I preferably enjoy working with low level APIs instead of high level APIs. The main reason behind that is the amount of control I have as a developer, especially on creating the functionality I need. So if there is an alternative API which provides a lower level solution than a high level API which does exactly what I need&amp;hellip;
I would still go for the lower level solution, even if I have to recreate the same functionality as the high level API.</description>
    </item>
    
  </channel>
</rss>
