<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Work on Porrith Suong</title>
    <link>/work/</link>
    <description>Recent content in Work on Porrith Suong</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 02 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/work/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thousand Ant</title>
      <link>/work/thousandant/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>/work/thousandant/</guid>
      <description>I work with Thousand Ant and create educational videos/technical scripts to explain new tech and features for their end users.
Thousand Ant At Thousand Ant, I had the opportunity to create technical demos demoing some techniques game developers can use in their games with Unity.
Flocking with the C# Job System 
C# Job System: Using DOTS with Managed C# APIs 
Unity Technologies Physics Optimizations 
Shader Graph Feature Video</description>
    </item>
    
    <item>
      <title>Custom Scriptable Render Pipeline</title>
      <link>/work/custom-srp/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/work/custom-srp/</guid>
      <description>The Custom Scriptable Render Pipeline is an ongoing project to create my own render pipeline to use in Unity for future projects.
Github Link
   Feature     Rendering Various Layers    Batching Multiple Spheres    Lighting with PBR rendering     </description>
    </item>
    
    <item>
      <title>DANI AI</title>
      <link>/work/dani-ai/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/work/dani-ai/</guid>
      <description>Dani AI is a node based editor to help design and prototype AI in Unity. Each AI designed and built using Dani AI follows a neural network like schema and attempts to treat each agent as an organism with senses that update in realtime.
Senses provide natural information about the simulated world and hook into decisions, where the agent executes a series of authored actions from the user.
You can grab it here on the Asset Store.</description>
    </item>
    
    <item>
      <title>Reactive Disposal</title>
      <link>/work/reactivedisposal/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/work/reactivedisposal/</guid>
      <description>Reactive Disposal is really just a small layer on top of Unity&amp;rsquo;s Entity Component System to dispose unmanaged memory. This is not the same as a garbage collector as it does not do it automatically - the dispose function must still be called but this reduces the amount of code needed to write the same functionality over and over again.
Github Link</description>
    </item>
    
    <item>
      <title>UGUIDots</title>
      <link>/work/uguidots/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/work/uguidots/</guid>
      <description>UGUIDots is an on going project to convert Unity&amp;rsquo;s default UI to a data oriented compliant system. The system is meant to augment on top of Unity&amp;rsquo;s UI.
Currently, the only features supported are:
 Simple image rendering Text rendering Render orders Static Analysis for batching Button States  Button closing   Image Effects interfaced with Universal Render Pipeline Shaders Scaling &amp;amp; Anchoring Text support through char pointers  Github Link</description>
    </item>
    
  </channel>
</rss>
